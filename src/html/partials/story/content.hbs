<p>
	I recently published a story that tried to answer the question <a href='https://pudding.cool/2017/04/beer' target='_blank'>“what city is the microbrew capital of the US?”</a> One of the graphics in the story allows the user to adjust some parameters to change the rankings, and see how the data can be manipulated to yield different results. It looks like this:
</p>
<p>
	<video src='assets/demo.mp4' preload autoplay loop></video>
</p>
<p>
	The idea for this chart started when <a href='twitter.com/matthew_daniels' target='_blank'>Matt</a> sent me the latest <a href='https://www.nytimes.com/interactive/2017/03/30/upshot/good-schools-affordable-homes-suburban-sweet-spots.html' target='_blank'>Upshot</a> article that explored school systems and home prices. I was still in the process of figuring out how I wanted to display the rankings of all cities, and he suggested something similar.
</p>
<p>
	<img src='assets/nyt.jpg'>
</p>
<p>
	The mental model of higher on the chart equaling worse takes a bit of thought, but nonetheless, the chart was effective. It was helpful to have a single focal point to anchor the reader, and the lines enabled you to spatially compare the nodes.
</p>
<p>
	For my chart, I started with two dimensions; a score for quality, and one for quantity. This was easy to whip up since it was a traditional scatter plot. Unlike the NYT’s example, I had no starting point for comparison. The encoding for “better” relied upon size and color, which was dynamic based on user input. Try it out below.
</p>
<div class='graphic graphic--1 tk-atlas'>
	<div class='chart'></div>
	<div class='slider'><input type='range' min='0' max='100' value='50'></div>
</div>
<p class='view-code'>
	<a href='https://bl.ocks.org/5af7511ac730089820ca7c0406afd496' target='_blank'>view code</a>
</p>
<p>
	This worked. But to me, it didn’t do a good job at communicating what was going on behind the scenes of the weighting. I decided try a spatial encoding to further emphasize the weighting factors. The most obvious way was to make axes proportional to their weight. So if our chart was 100x100, and the “quality” was weighted at 60%, it would be 60x40. The more a circle was towards the top-right corner, the higher its rank.
</p>
<div class='graphic graphic--2 tk-atlas'>
	<div class='chart'></div>
	<div class='slider'><input type='range' min='0' max='100' value='50'></div>
</div>
<p class='view-code'>
	<a href='https://bl.ocks.org/5dfe0e5ad8bff4556a2167d885a44ec7' target='_blank'>view code</a>
</p>
<p>
	This worked, too. But there were two problems: the chart kept changing size, and the “top-right is better” idea might be less intuitive to the layperson. I started looking at other graphics for inspiration and remembered Adam Pearce’s <a href='http://roadtolarissa.com/nba-win-loss/' target='_blank'>rotated scatterplot</a>, used to better align the chart trend with your level gaze. 
</p>
<p>
	<img src='assets/larissa.jpg'>
</p>
<p>
	The final step was to implement a combination of the visually proportional axes with the rotated chart to achieve maximum spatial encoding and understanding.
</p>
<p>
	For this to work, I had to dig into some mild trigonometry. I first needed to find the length of the hypotenuse (the line from bottom-left to top-right) in order to scale the axes as they change. This would keep the chart dimensions consistent. I then needed to calculate the angle of that this triangle to rotate the chart, thus keeping the hypotenuse vertically oriented.
</p>
<p>
	I applied these transformations to the the chart and voila, the weighted pivot scatter plot was alive.
</p>
<div class='graphic graphic--3 tk-atlas'>
	<div class='chart'></div>
	<div class='slider'><input type='range' min='0' max='100' value='50'></div>
</div>
<p class='view-code'>
	<a href='https://bl.ocks.org/aba5f81a8bd0633a399d692289ab97eb' target='_blank'>view code</a>
</p>
<p>
	Was the extra level of encoding necessary? Maybe not, but it came with one unexpected and undeniable side effect; it was fun. Watching the chart pivot and transition in response to your input is playful. I believe that it made the chart more engaging. Despite being a fairly short story, it got upwards of 10 minutes time on page per user. It also invites the user to more deeply explore the data, which has a less quantifiable effect, much like a gorgeous presentation. 
</p>